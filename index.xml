<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bruno&#39;s tech minutes</title>
    <link>https://btravouillon.github.io/</link>
    <description>Recent content on Bruno&#39;s tech minutes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 05 Dec 2020 13:15:16 -0400</lastBuildDate><atom:link href="https://btravouillon.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Test BlueBanquise PR with Vagrant</title>
      <link>https://btravouillon.github.io/posts/test-bluebanquise-PR-with-vagrant/</link>
      <pubDate>Sat, 05 Dec 2020 13:15:16 -0400</pubDate>
      
      <guid>https://btravouillon.github.io/posts/test-bluebanquise-PR-with-vagrant/</guid>
      <description>The BlueBanquise CI is somewhat limited when it comes to test client-server setup.
This post will demonstrate how to test a pull request (PR) for BlueBanquise in virtual machines with Vagrant and the bluebanquise-vagrant project. I want to create a virtual environment to test the PR #397 which implements the customization of the port of the rsyslog server. At the time of writing, the head of this PR is 4605aeb.</description>
    </item>
    
    <item>
      <title>Automate Hugo builds with GitHub Actions</title>
      <link>https://btravouillon.github.io/posts/automate-hugo-builds-with-github-actions/</link>
      <pubDate>Sun, 29 Nov 2020 18:28:33 -0500</pubDate>
      
      <guid>https://btravouillon.github.io/posts/automate-hugo-builds-with-github-actions/</guid>
      <description>The sources of this blog are tracked in a git repository hosted on GitHub. The editable content is kept in the default branch main, while the static pages built by Hugo are stored in the gh-pages branch. The GitHub Pages hosting service is configured to use the content of gh-pages as a source.
The process to build and publish a website with Hugo, explained in a previous blog post, requires several manual steps.</description>
    </item>
    
    <item>
      <title>Create a Website With Hugo</title>
      <link>https://btravouillon.github.io/posts/create-a-website-with-hugo/</link>
      <pubDate>Sat, 21 Nov 2020 17:34:24 -0500</pubDate>
      
      <guid>https://btravouillon.github.io/posts/create-a-website-with-hugo/</guid>
      <description>+ Hugo is a static website generator written in Go. This is a framework that helps to quickly and efficiently build a website from templates, themes and markdown content.
In this blog post, I will demonstrate how to build a static website with Hugo and publish it to GitHub Pages. This post does not cover the initialization of the GitHub Pages which is documented here.
Initial Setup of the Website There are several ways to install Hugo, which depend on your operating system.</description>
    </item>
    
  </channel>
</rss>
